# lua_package_cpath '/usr/lib/x86_64-linux-gnu/lua/5.1/?.so;;';

init_by_lua 'cjson = require "cjson"';

server {
        listen 80;
        server_name api.uys.io;

        location / {
                default_type application/json;
                # default_type text/html; 
                content_by_lua '
                        -- ngx.header["Content-Type"] = "application/json"
                        ngx.say(cjson.encode({version = 0.1, foo = "bar", time = os.time()}))
                        -- ngx.say("hello")
                ';
        }

        location /_ {
                # TODO proxy to API /_ here.
                proxy_pass http://127.0.0.1:$server_port/ ;
                proxy_set_header Host $http_host;

                header_filter_by_lua '
                        if ngx.header.content_encoding == "gzip" then
                                local zlib = require "zlib"
                                ngx.ctx.inflate = zlib.inflate()
                                ngx.header.content_length = nil
                                ngx.header.content_encoding = nil
                        end
                ';

                body_filter_by_lua '
                        local inflate = ngx.ctx.inflate
                        if not inflate then
                                return
                        else
                        end
                        local s = ngx.arg[1]

                        if s ~= "" then
                                local inflated = inflate(s)
                                if inflated ~= "" then
                                        inflated = string.gsub(inflated, "\\n", "")
                                        local new = "{" .. string.upper(inflated) .. "}\\n"
                                        ngx.arg[1] = new
                                else
                                        ngx.arg[1] = nil
                                end
                        end
                ';
        }
}
